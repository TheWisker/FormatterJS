/**
 * @license FormatterJS
 * formatter.js
 *
 * Copyright (c) TheWisker.
 *
 * This source code is licensed under the GNU license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";class Formatter{#a;#b;#c;constructor(e,t){this.#b=e,this.#c=t}static zeroFormat(e,t){for(e+="";e.length<(t||2);)e="0"+e;return e}static clean(e){return e.replaceAll(/(\\x01%\\x01)/g,"%")}isUtc(){return this.#c}getFormat(){return this.#b}getCache(){return this.#a}setCache(e){this.#a=e}format(){return this.#a=this.#b,this.#a=this.#a.replaceAll(/(%%)/g,"\x01%\x01"),!1}}class DateFormatter extends Formatter{static #d={long:["January","February","March","April","May","June","July","August","September","October","Noemvber","December"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]};static #e={long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]};constructor(e,t){super(e,t)}format(e){return e=e||new Date,super.format(),DateFormatter.clean(this.#f(e))}#f(e){return super.setCache(super.getCache().replaceAll(/(%Y)/g,super.isUtc()?e.getUTCFullYear():e.getFullYear())),super.setCache(super.getCache().replaceAll(/(%y)/g,e.getYear())),super.setCache(super.getCache().replaceAll(/(%J)/g,()=>{let t=super.isUtc()?e.getUTCDate():e.getDate();for(let r=super.isUtc()?e.getUTCMonth():e.getMonth();r>0;r--)1!=r?r<=6&&r%2==0||r>=7&&r%2==1?t+=31:t+=30:(super.isUtc()?e.getUTCFullYear():e.getFullYear())%4==0?t+=29:t+=28;return t})),super.setCache(super.getCache().replaceAll(/(%M)/g,DateFormatter.zeroFormat((super.isUtc()?e.getUTCMonth():e.getMonth())+1))),super.setCache(super.getCache().replaceAll(/(%m)/g,(super.isUtc()?e.getUTCMonth():e.getMonth())+1)),super.setCache(super.getCache().replaceAll(/(%B)/g,DateFormatter.#d.long[super.isUtc()?e.getUTCMonth():e.getMonth()])),super.setCache(super.getCache().replaceAll(/(%b)/g,DateFormatter.#d.short[super.isUtc()?e.getUTCMonth():e.getMonth()])),super.setCache(super.getCache().replaceAll(/(%D)/g,DateFormatter.zeroFormat(super.isUtc()?e.getUTCDate():e.getDate()))),super.setCache(super.getCache().replaceAll(/(%d)/g,super.isUtc()?e.getUTCDate():e.getDate())),super.setCache(super.getCache().replaceAll(/(%A)/g,DateFormatter.#e.long[super.isUtc()?e.getUTCDay():e.getDay()])),super.setCache(super.getCache().replaceAll(/(%a)/g,DateFormatter.#e.short[super.isUtc()?e.getUTCDay():e.getDay()])),super.setCache(super.getCache().replaceAll(/(%W)/g,(super.isUtc()?e.getUTCDay():e.getDay())+1)),super.getCache()}}class TimeFormatter extends Formatter{constructor(e,t){super(e,t)}format(e){return e=e||new Date,super.format(),TimeFormatter.clean(this.#f(e))}#f(t){return super.setCache(super.getCache().replaceAll(/(%H)/g,TimeFormatter.zeroFormat(super.isUtc()?t.getUTCHours():t.getHours()))),super.setCache(super.getCache().replaceAll(/(%I)/g,TimeFormatter.zeroFormat((super.isUtc()?t.getUTCHours():t.getHours())>12?(super.isUtc()?t.getUTCHours():t.getHours())-12:super.isUtc()?t.getUTCHours():t.getHours()))),super.setCache(super.getCache().replaceAll(/(%h)/g,super.isUtc()?t.getUTCHours():t.getHours())),super.setCache(super.getCache().replaceAll(/(%i)/g,(super.isUtc()?t.getUTCHours():t.getHours())>12?(super.isUtc()?t.getUTCHours():t.getHours())-12:super.isUtc()?t.getUTCHours():t.getHours())),super.setCache(super.getCache().replaceAll(/(%K)/g,TimeFormatter.zeroFormat(super.isUtc()?t.getUTCMinutes():t.getMinutes()))),super.setCache(super.getCache().replaceAll(/(%k)/g,super.isUtc()?t.getUTCMinutes():t.getMinutes())),super.setCache(super.getCache().replaceAll(/(%S)/g,TimeFormatter.zeroFormat(super.isUtc()?t.getUTCSeconds():t.getSeconds()))),super.setCache(super.getCache().replaceAll(/(%s)/g,super.isUtc()?t.getUTCSeconds():t.getSeconds())),super.setCache(super.getCache().replaceAll(/(%L)/g,Math.round(super.isUtc()?t.getUTCMilliseconds():t.getMilliseconds()/100))),super.setCache(super.getCache().replaceAll(/(%Q)/g,TimeFormatter.zeroFormat(Math.round(super.isUtc()?t.getUTCMilliseconds():t.getMilliseconds()/10),2))),super.setCache(super.getCache().replaceAll(/(%q)/g,Math.round(super.isUtc()?t.getUTCMilliseconds():t.getMilliseconds())/10)),super.setCache(super.getCache().replaceAll(/(%F)/g,TimeFormatter.zeroFormat(super.isUtc()?t.getUTCMilliseconds():t.getMilliseconds(),3))),super.setCache(super.getCache().replaceAll(/(%f)/g,super.isUtc()?t.getUTCMilliseconds():t.getMilliseconds())),super.setCache(super.getCache().replaceAll(/(%P)/g,(super.isUtc()?t.getUTCHours():t.getHours())>12?"PM":"AM")),super.setCache(super.getCache().replaceAll(/(%p)/g,(super.isUtc()?t.getUTCHours():t.getHours())>12?"pm":"am")),super.setCache(super.getCache().replaceAll(/(%T)/g,t.getTimezoneOffset()>=0?"+"+TimeFormatter.zeroFormat(Math.floor((t.getTimezoneOffset()+1)/60-1/60)):"-"+TimeFormatter.zeroFormat(Math.floor(Math.abs(t.getTimezoneOffset())/60)))),super.setCache(super.getCache().replaceAll(/(%t)/g,t.getTimezoneOffset()>=0?"+"+Math.floor((t.getTimezoneOffset()+1)/60-1/60):"-"+Math.floor(Math.abs(t.getTimezoneOffset())/60))),super.getCache()}}class UniversalFormatter extends Formatter{static #d={long:["January","February","March","April","May","June","July","August","September","October","Noemvber","December"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]};static #e={long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]};constructor(e,t){super(e,t)}format(e){return e=e||new Date,super.format(),UniversalFormatter.clean(this.#f(e))}#f(r){return super.setCache(super.getCache().replaceAll(/(%Y)/g,super.isUtc()?r.getUTCFullYear():r.getFullYear())),super.setCache(super.getCache().replaceAll(/(%y)/g,r.getYear())),super.setCache(super.getCache().replaceAll(/(%J)/g,()=>{let e=super.isUtc()?r.getUTCDate():r.getDate();for(let t=super.isUtc()?r.getUTCMonth():r.getMonth();t>0;t--)1!=t?t<=6&&t%2==0||t>=7&&t%2==1?e+=31:e+=30:(super.isUtc()?r.getUTCFullYear():r.getFullYear())%4==0?e+=29:e+=28;return e})),super.setCache(super.getCache().replaceAll(/(%M)/g,UniversalFormatter.zeroFormat((super.isUtc()?r.getUTCMonth():r.getMonth())+1))),super.setCache(super.getCache().replaceAll(/(%m)/g,(super.isUtc()?r.getUTCMonth():r.getMonth())+1)),super.setCache(super.getCache().replaceAll(/(%B)/g,UniversalFormatter.#d.long[super.isUtc()?r.getUTCMonth():r.getMonth()])),super.setCache(super.getCache().replaceAll(/(%b)/g,UniversalFormatter.#d.short[super.isUtc()?r.getUTCMonth():r.getMonth()])),super.setCache(super.getCache().replaceAll(/(%D)/g,UniversalFormatter.zeroFormat(super.isUtc()?r.getUTCDate():r.getDate()))),super.setCache(super.getCache().replaceAll(/(%d)/g,super.isUtc()?r.getUTCDate():r.getDate())),super.setCache(super.getCache().replaceAll(/(%A)/g,UniversalFormatter.#e.long[super.isUtc()?r.getUTCDay():r.getDay()])),super.setCache(super.getCache().replaceAll(/(%a)/g,UniversalFormatter.#e.short[super.isUtc()?r.getUTCDay():r.getDay()])),super.setCache(super.getCache().replaceAll(/(%H)/g,UniversalFormatter.zeroFormat(super.isUtc()?r.getUTCHours():r.getHours()))),super.setCache(super.getCache().replaceAll(/(%I)/g,UniversalFormatter.zeroFormat((super.isUtc()?r.getUTCHours():r.getHours())>12?(super.isUtc()?r.getUTCHours():r.getHours())-12:super.isUtc()?r.getUTCHours():r.getHours()))),super.setCache(super.getCache().replaceAll(/(%h)/g,super.isUtc()?r.getUTCHours():r.getHours())),super.setCache(super.getCache().replaceAll(/(%i)/g,(super.isUtc()?r.getUTCHours():r.getHours())>12?(super.isUtc()?r.getUTCHours():r.getHours())-12:super.isUtc()?r.getUTCHours():r.getHours())),super.setCache(super.getCache().replaceAll(/(%K)/g,UniversalFormatter.zeroFormat(super.isUtc()?r.getUTCMinutes():r.getMinutes()))),super.setCache(super.getCache().replaceAll(/(%k)/g,super.isUtc()?r.getUTCMinutes():r.getMinutes())),super.setCache(super.getCache().replaceAll(/(%S)/g,UniversalFormatter.zeroFormat(super.isUtc()?r.getUTCSeconds():r.getSeconds()))),super.setCache(super.getCache().replaceAll(/(%s)/g,super.isUtc()?r.getUTCSeconds():r.getSeconds())),super.setCache(super.getCache().replaceAll(/(%L)/g,Math.round(super.isUtc()?r.getUTCMilliseconds():r.getMilliseconds()/100))),super.setCache(super.getCache().replaceAll(/(%Q)/g,UniversalFormatter.zeroFormat(Math.round(super.isUtc()?r.getUTCMilliseconds():r.getMilliseconds()/10),2))),super.setCache(super.getCache().replaceAll(/(%q)/g,Math.round(super.isUtc()?r.getUTCMilliseconds():r.getMilliseconds())/10)),super.setCache(super.getCache().replaceAll(/(%F)/g,UniversalFormatter.zeroFormat(super.isUtc()?r.getUTCMilliseconds():r.getMilliseconds(),3))),super.setCache(super.getCache().replaceAll(/(%f)/g,super.isUtc()?r.getUTCMilliseconds():r.getMilliseconds())),super.setCache(super.getCache().replaceAll(/(%P)/g,(super.isUtc()?r.getUTCHours():r.getHours())>12?"PM":"AM")),super.setCache(super.getCache().replaceAll(/(%p)/g,(super.isUtc()?r.getUTCHours():r.getHours())>12?"pm":"am")),super.setCache(super.getCache().replaceAll(/(%T)/g,r.getTimezoneOffset()>=0?"+"+UniversalFormatter.zeroFormat(Math.floor((r.getTimezoneOffset()+1)/60-1/60)):"-"+UniversalFormatter.zeroFormat(Math.floor(Math.abs(r.getTimezoneOffset())/60)))),super.setCache(super.getCache().replaceAll(/(%t)/g,r.getTimezoneOffset()>=0?"+"+Math.floor((r.getTimezoneOffset()+1)/60-1/60):"-"+Math.floor(Math.abs(r.getTimezoneOffset())/60))),super.getCache()}}export{DateFormatter,TimeFormatter,UniversalFormatter as default};